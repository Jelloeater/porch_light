version: '3'
includes:
    deploy: ./TaskfileDeploy.yaml

vars:
    BUILD_DIR: pl_worker
    IMAGE_NAME: pl_worker
    DOCKER_FILE: Dockerfile
tasks:
    docker:
        - task: deploy
    default:
        silent: true
        interactive: false
        cmds:
            - poetry install
            - task: test
            - task: commit
    setup:
        - python3 -m pip install pipx
        - python3 -m pipx ensurepath
        - pipx install poetry
        - poetry run pre-commit install
    clean:
        - rm -rf dist
        - poetry cache clear _default_cache --all  --no-interaction
        - poetry cache clear PyPI --all  --no-interaction
        - poetry check
        - py3clean .
    test:
        silent: true
        interactive: false
        cmds:
            - poetry run bandit --silent -r {{.BUILD_DIR}}
            - poetry run vulture --min-confidence 100 {{.BUILD_DIR}}
            - poetry run xenon --max-absolute B --max-modules B --max-average B {{.BUILD_DIR}}
            - poetry run pytest --cov --cov-fail-under=80
    commit:
        - poetry run isort --atomic {{.BUILD_DIR}}
        - poetry run black {{.BUILD_DIR}}
        - poetry run black test
    docker-purge: docker system prune -a -f --volumes
    show_secrets:
        - git secret reveal -f
    save_secrets:
        - git secret hide -m -d
    start_webserver: poetry run python3 pl_worker/webserver.py
    start_docker_rootless:
        env: # Due to running root-less on dev box
            DOCKER_HOST: unix:///run/user/1000/docker.sock
        cmds:
            - docker-compose up
    start_docker:
        cmds:
            - docker-compose up # HTTP bind to 80
